{
	"nodes":[
		{"id":"d93c2dc1c2007112","type":"group","x":-1767,"y":3271,"width":4666,"height":1036,"label":"Lumber"},
		{"id":"d93ad9247fe61657","type":"group","x":-656,"y":-2843,"width":1397,"height":1654,"label":"program modes are indent levels - colorcoded"},
		{"id":"54dcc26d7d4b3006","type":"group","x":1876,"y":-3517,"width":440,"height":597,"label":"program"},
		{"id":"97804bbcd6a64158","type":"group","x":-575,"y":-3214,"width":1018,"height":192,"label":"My Story Principles"},
		{"id":"a54bc022b7681d71","type":"group","x":3351,"y":-2642,"width":398,"height":256,"label":"Animation"},
		{"id":"52fe7e4fbaaa5366","type":"link","url":"https://youtu.be/jKnRgsoO2ME?feature=shared","x":-1716,"y":-1419,"width":876,"height":488},
		{"id":"daa059330dc8dcd0","type":"text","text":"# Readme\n\n- [x] base template ✅ 2024-07-20\n- [x] base componets ✅ 2024-07-20\n- [x] frames set just copy paste ✅ 2024-07-20\n- [x] checkout dev mode, open educational account, make in that and stick it here ✅ 2024-07-20\n- [x] fix proportions ✅ 2024-07-20\n- [x] copy over program ✅ 2024-07-21\n- [x] refix proportions rough ✅ 2024-07-21\n- [x] fix text in each box, keep customization ✅ 2024-07-21\n- [x] fill specific text ✅ 2024-07-21\n- [x] make array customizable ✅ 2024-07-21\n- [x] increase box size ✅ 2024-07-21\n- [x] deafult hide everything ✅ 2024-07-21\n- [x] title every frame with prog statement ✅ 2024-07-21\n- [x] add pointers components ✅ 2024-07-21\n- [ ] copy paste additonal loop frames, mark as such -  add mode-state / color to them \n- [ ] copy paste if frames\n- [ ] \n- [ ] Start frames\n\t- [ ] make any components needed on the way\n- [ ] frame 1\n- [ ] frame 2\n- [ ] frame 3\n- [ ] frame 4\n- [ ] frame 5\n- [ ] frame 6\n- [ ] frame 7\n- [ ] frame 8\n- [ ] frame 9\n- [ ] frame 10\n- [ ] frame 11\n- [ ] frame 12\n- [ ] frame 13\n- [ ] frame 14\n- [ ] frame 15\n- [ ] frame 16\n- [ ] frame 17\n- [ ] frame 18\n- [ ] frame 19\n- [ ] frame 20\n- [ ] \n- [ ] try a basic slideshow prototype, to get a feel of things\n- [ ] \n- [ ] \n- [ ] Start JSon for frames\n- [ ] \n- [ ] frame 1\n- [ ] frame 2\n- [ ] frame 3\n- [ ] frame 4\n- [ ] frame 5\n- [ ] frame 6\n- [ ] frame 7\n- [ ] frame 8\n- [ ] frame 9\n- [ ] frame 10\n- [ ] frame 11\n- [ ] frame 12\n- [ ] frame 13\n- [ ] frame 14\n- [ ] frame 15\n- [ ] frame 16\n- [ ] frame 17\n- [ ] frame 18\n- [ ] frame 19\n- [ ] frame 20\n- [ ] \n- [ ] _\n- [ ] \n- [ ] Start Debug\n\t- [ ] \n\t- [ ] \n- [ ] \n- [ ] \n- [ ] \n- [ ] \n- [ ] \n- [ ] \n- [ ] _\n- [ ] ","x":-1760,"y":-456,"width":373,"height":2223},
		{"id":"7a9d1baff0582016","type":"file","file":"_I the Mindful Consciousness/_files/Saraswati Maa 2.jpg","x":-1716,"y":-1890,"width":400,"height":396},
		{"id":"be584769a1bef534","type":"text","text":"- levels of indentations\n\t- blocks\n\t- conditional checks vs expressions\n- Assume every expression that is there is in its simplete possible form: 2 operand (players), 1 operator (action/scene) -> 1 result\n\t- we'll canculate nested expressions later and flog all over the plae with that power\n- Is a program divided by lines or by expressions? on a scale from line to unit keyword or AST recognised unit. How should you read/ex\n- computed values represention: funtion? expresion to calc? AST already does that? wait nvm, think of that later, just what you want right now\n- conditional tests. Expression/computed values too, but used with levels, you go back to check them\n- The unspooling unspools from those points infact, and also decides how many times willbe unspooled.\n- ","x":-1066,"y":3291,"width":250,"height":595},
		{"id":"531da81ecb903835","type":"text","text":"","x":2629,"y":3753,"width":250,"height":60},
		{"id":"13ae8c4a788fc7b5","type":"text","text":"# What I want to have right now that I'm willing to get uncomfortable for\n\n- [ ] I want ot have a json input to the frame\n- [ ] \n- [ ] _\n- [ ] _","x":-556,"y":3383,"width":288,"height":238},
		{"id":"78adb8862a0bcf2c","type":"text","text":"","x":260,"y":-2473,"width":261,"height":346,"color":"3"},
		{"id":"f8a3df85d0481036","type":"text","text":"","x":363,"y":-2402,"width":243,"height":247,"color":"3"},
		{"id":"21ea0d2172f0f250","type":"text","text":"","x":432,"y":-2390,"width":237,"height":223,"color":"3"},
		{"id":"e8225934f7fbc8ce","type":"text","text":"","x":-370,"y":-2302,"width":125,"height":69,"color":"1"},
		{"id":"95b2ec9413b57037","type":"text","text":"","x":-190,"y":-2478,"width":261,"height":346,"color":"3"},
		{"id":"ceb69ce3215a1d48","type":"text","text":"","x":-87,"y":-2407,"width":243,"height":247,"color":"2"},
		{"id":"6c6ec901f80c4485","type":"text","text":"# Fn calls, recursion \n- Pre / entry: inputs\n- Scope: These are portals, only having the scope inside them\n- single or multiple times","x":64,"y":-2096,"width":258,"height":189},
		{"id":"460bafeae644d614","type":"text","text":"# ***UNFUUURRRL***: And you get your CANVAS ","x":-283,"y":-2558,"width":361,"height":76},
		{"id":"86fb45de8fa762d2","type":"text","text":"```json\n{\n    s = \"2t3o11g2s\"\n}\n```","x":-352,"y":-1540,"width":287,"height":93},
		{"id":"e1e1f9ce6b4ef672","type":"text","text":"These mentioned things could all be seen in the animation frame","x":-346,"y":-1828,"width":250,"height":60,"color":"5"},
		{"id":"bc5469d6df8225b6","type":"text","text":"Think of them like in level modes, like hexagon after you hit 60 sec\n","x":-159,"y":-1793,"width":281,"height":96},
		{"id":"412a5d71bfc0cee5","type":"text","text":"The code that didn't execute like if blocks is not needed to be shown in anim, anly in the canvas","x":-237,"y":-1669,"width":250,"height":137},
		{"id":"e62d365bfe48bb4d","type":"text","text":"","x":-636,"y":-2483,"width":248,"height":346,"color":"4"},
		{"id":"613eadaae0fdcd76","type":"text","text":"","x":-567,"y":-2366,"width":250,"height":165,"color":"6"},
		{"id":"f027bb8f6b664b18","type":"text","text":"","x":-509,"y":-2300,"width":248,"height":76,"color":"3"},
		{"id":"27f93fb2001d1012","type":"text","text":"# loops, conditionals\n- Pre / entry: a condition\n- scope: the above are rooms, having all the outside scope too\n- single or multiple times\n- can be deactivated/skipped - if condition is false","x":-499,"y":-2090,"width":258,"height":222},
		{"id":"26578ef8c22355e3","type":"text","text":"","x":-616,"y":-2824,"width":358,"height":216,"color":"4"},
		{"id":"3b99145fdb043944","type":"text","text":"","x":-596,"y":-2809,"width":320,"height":179,"color":"6"},
		{"id":"2bd74dcd98442a44","type":"text","text":"","x":-577,"y":-2787,"width":280,"height":135,"color":"3"},
		{"id":"93da65bc8b14f0e2","type":"text","text":"","x":-428,"y":-2784,"width":129,"height":129,"color":"1"},
		{"id":"743101dd961895cf","type":"text","text":"# LEVELS","x":-193,"y":-2738,"width":250,"height":60},
		{"id":"c7c5475c415df46d","type":"text","text":"","x":107,"y":-2800,"width":355,"height":209,"color":"3"},
		{"id":"e0f01b7ea31fc630","type":"text","text":"","x":134,"y":-2781,"width":304,"height":170,"color":"3"},
		{"id":"4e721ba41089a088","type":"text","text":"","x":158,"y":-2761,"width":261,"height":130,"color":"3"},
		{"id":"8440b960c00daad1","type":"text","text":"write it like a #web-design in 4 minutes\nwrite it like an anime\n\ndon't brain crack, write.","x":144,"y":-3167,"width":279,"height":111},
		{"id":"74c29d0cd016310f","type":"text","text":"deja vu's","x":-180,"y":-3194,"width":250,"height":60},
		{"id":"5d9ce052b25c87d9","type":"text","text":"#anime convey more with less","x":-555,"y":-3187,"width":280,"height":92},
		{"id":"e02a55fd6a96ceb7","type":"text","text":"color coded","x":-360,"y":-3144,"width":250,"height":60},
		{"id":"7938f944367c15fd","type":"text","text":"limited number of colors. symbols too, but colors first.","x":-125,"y":-3102,"width":250,"height":60},
		{"id":"c89b635a8dde3c5d","type":"text","text":"# Canvas, Storyboard\n- We can generate .canvas files programmatically, they're just json.\n- ","x":1032,"y":-1860,"width":290,"height":244},
		{"id":"dbbdd139a6bf1d1e","type":"text","text":"# Expression evaluation \n\n- We can generate .canvas files programmatically, they're just json.\n- Can we generate components programatically?\n- **What do you want to show exactly when this is being done? one by one subsitution and calc?**","x":1014,"y":-2556,"width":273,"height":247},
		{"id":"254e79583259502f","type":"text","text":"Most times the expression means somthing, and it is useful to go see the players how it's related to them\nhighlight to the players be dfauelt, only do subs and calc for complex calculation \n- it may be assignment, maybe movement, maybe  ...\n- you just have to keep adding these abilities to the players themselves","x":1127,"y":-2507,"width":260,"height":340},
		{"id":"ad326337b8f40dbe","type":"link","url":"https://youtu.be/K5gI2RicywA?feature=shared","x":-1686,"y":2013,"width":640,"height":360},
		{"id":"940d196eee35d6ec","type":"link","url":"https://www.figma.com/proto/gmmY6RWuStZm4WTh0Gpyv2/tria_leshp?node-id=1-34&t=mZ68zVK8sb2aL8WZ-1","x":264,"y":-1050,"width":2433,"height":3437},
		{"id":"8e58ea317c4288c7","type":"text","text":"# ASTeeeee","x":2439,"y":-3265,"width":190,"height":118},
		{"id":"25f12ad0de0dff96","type":"file","file":"Lumber/programming/Algorithm Practice/arrays, BAR CHARTS, STREEAMs, strings, maps, lists/uncompress - 2ptr.md","x":1896,"y":-3340,"width":400,"height":400},
		{"id":"e3248d5ef80a6500","type":"text","text":"# Program - Source code with syntax","x":2003,"y":-3497,"width":168,"height":109},
		{"id":"505419bbf28f03e2","type":"file","file":"Lumber/programming/hardware, os, computers are fast, chips, cpu, memory, system level languages, compilers, operating systems, computer arch, machine code/Machine code, no loops, no subroutines, limited instructions.canvas","x":3166,"y":-4140,"width":273,"height":300},
		{"id":"31ec3bc077fc8047","type":"text","text":"# Formatters, linters, prettier, transpile","x":3163,"y":-3479,"width":250,"height":105},
		{"id":"e411e075c51d2aeb","type":"text","text":"# Convert to other Language/syntex","x":3234,"y":-3321,"width":250,"height":50},
		{"id":"add27f5365d94498","type":"text","text":"# Refactor, rm unused","x":3183,"y":-3237,"width":250,"height":60},
		{"id":"5f7dd90a4821325a","type":"text","text":"","x":3371,"y":-2622,"width":358,"height":216,"color":"4"},
		{"id":"839a9d2927e577d0","type":"text","text":"","x":3391,"y":-2607,"width":320,"height":179,"color":"6"},
		{"id":"fb6469071a989ae6","type":"text","text":"","x":3559,"y":-2582,"width":129,"height":129,"color":"1"},
		{"id":"9bce458fa1dd10a9","type":"text","text":"","x":3410,"y":-2585,"width":280,"height":135,"color":"3"},
		{"id":"de432d5b2d8461cf","type":"text","text":"# Meta: constant or not? Yes ofcourse\n\nAll players (vars) there are, not counting the derived values.\n\n```json\n{\n  \"players_ie_vars\": {\n    \"s\": {\n      \"type\": \"array\",\n      \"role\": \"foreground or input\",\n      \"input\": true,\n      \"foreground\": true\n    },\n    \"i\": {\n      \"type\": \"int\",\n      \"role\": \"counter\"\n    },\n    \"j\": {\n      \"type\": \"int\",\n      \"role\": \"counter\"\n    },\n    \"res\": {\n      \"type\": \"array\",\n      \"role\": \"output\"\n    },\n    \"digits\": {\n      \"type\": \"string\",\n      \"role\": \"constant\"\n    }\n  },\n\n\n\n  \"max_indent_level\": 3,\n  \"problem_type?\": \"array\"\n}\n\n```\n","x":2130,"y":-2634,"width":365,"height":820},
		{"id":"130aedf1e32cf15e","type":"text","text":"# Spool vs Constant Meta\n```json\n{\n  \"scope\": {\n    \"players_and_their_values\": {\n      \"s\": {\"value\": [6,1,8,4]},\n      \"i\": {},\n      \"j\": {},\n      \"res\": {},\n      \"digits\": {}, // nevr chages so maybe not needed\n    },\n    \"derived_or_intermediates_and_trees\": {\n    },\n  },\n  \"all_interactions_expressions?\": {\n    \"expr_id1\": {\"the_expression_tree\"},\n    \"\"\n    \n  },\n  \"levels_stack\": [\n    {\n      \"type\": {},\n      \"condition_or_input\": {},\n      \"anymore_unnecessary_info\": {}\n    },\n    {}\n  ], \n\n\n\n  \"stmt\": \"\",\n  \"story_at_this_point_or_message\": \"\"\n}\n```","x":2556,"y":-2616,"width":397,"height":703},
		{"id":"4a3205911d6b53cb","type":"text","text":"# Story, messages\n\n\n","x":1076,"y":-1469,"width":278,"height":251}
	],
	"edges":[
		{"id":"e0dc203544c4ebc6","fromNode":"8e58ea317c4288c7","fromSide":"right","toNode":"505419bbf28f03e2","toSide":"left","label":"compile"},
		{"id":"76fe9d1b7b01bef4","fromNode":"8e58ea317c4288c7","fromSide":"right","toNode":"5f7dd90a4821325a","toSide":"left","label":"animate a run with data"},
		{"id":"593c473302ec602d","fromNode":"8e58ea317c4288c7","fromSide":"right","toNode":"31ec3bc077fc8047","toSide":"left","label":"transpile"},
		{"id":"950537a3e065b8ec","fromNode":"54dcc26d7d4b3006","fromSide":"right","toNode":"8e58ea317c4288c7","toSide":"left"},
		{"id":"6cf91fffe89b40d0","fromNode":"8e58ea317c4288c7","fromSide":"right","toNode":"e411e075c51d2aeb","toSide":"left"},
		{"id":"92b58b07ceaad770","fromNode":"8e58ea317c4288c7","fromSide":"right","toNode":"add27f5365d94498","toSide":"left"}
	]
}